name: End-to-end tests
on: [push]
jobs:
  # cypress-run:
  #   runs-on: windows-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v1
  #     - name: Run E2E tests
  #       uses: cypress-io/github-action@v2
  #       with:
  #         record: true
  #       env:
  #         CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY}}
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  install:
    runs-on: ubuntu-latest
    container: cypress/browsers:node14.17.0-chrome88-ff89
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cypress install
        uses: cypress-io/github-action@v2
        with:
          runTests: false

  ui-chrome-tests:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    container: cypress/browsers:node14.17.0-chrome88-ff89
    needs: install
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run copies of the current job in parallel
        containers: [1, 2, 3, 4, 5]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # - name: Download the build folders
      #   uses: actions/download-artifact@v2
      #   with:
      #     name: build
      #     path: build

      - name: "UI Tests - Chrome"
        uses: cypress-io/github-action@v2
        with:
          # start: yarn start:ci
          # wait-on: "http://localhost:3000"
          wait-on-timeout: 120
          browser: chrome
          record: true
          parallel: true
          group: "UI - Chrome"
          # spec: cypress/integration/*
        env:
          # CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
